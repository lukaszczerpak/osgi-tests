#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2011 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
#
# This file incorporates work covered by the following copyright and
# permission notice:
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


#
# Framework config properties.
#

org.osgi.framework.system.packages=\
 org.osgi.framework; version=1.5.0, \
 org.osgi.framework.launch; version=1.0.0, \
 org.osgi.framework.hooks.service; version=1.4.0, \
 org.osgi.service.packageadmin; version=1.2.0, \
 org.osgi.service.startlevel; version=1.1.0, \
 org.osgi.service.url; version=1.0.0, \
 org.osgi.util.tracker; version=1.4.0 \
 ${extra-system-packages}

#extra-system-packages=${jre-${java.specification.version}} ${internal-jdk-pkgs-for-gf}, org.glassfish.embeddable;version=3.1
extra-system-packages=${jre-${java.specification.version}} ${internal-jdk-pkgs-for-gf}

# Although Eclipselink imports these packages, in typical GlassFish installation,
# Oracle JDBC driver may not be available as a bundle, so we ask user to install it in 
# java.ext.dirs and the bootdelegation helps there.
#eclipselink.bootdelegation=oracle.sql, oracle.sql.*

# There is no need to use bootdelegation except for the following issues:
# 1. EclipseLink
# 4. NetBeans profiler packages exist in parent class loader (see issue #8612)
# 5. BTrace exists in bootclasspath.
#org.osgi.framework.bootdelegation=${eclipselink.bootdelegation}, \
#                                  com.sun.btrace, com.sun.btrace.*, \
#                                  org.netbeans.lib.profiler, org.netbeans.lib.profiler.*
                                  
# The OSGi R4.2 spec says boot delegation uses the boot class loader by default. We need
# to configure it to use the framework class loader because that class loader is
# configured with extra classes like jdk tools.jar, derby jars, etc. that must be
# made available in GlassFish to work.
# org.osgi.framework.bundle.parent=framework

# org.osgi.framework.storage=${com.sun.aas.instanceRoot}/osgi-cache/felix/

# This is where we cache the inhabitants information
#com.sun.enterprise.hk2.cacheDir=${org.osgi.framework.storage}

# Important Note about autostart bundles:
# This property is interpreted by our autoprocessor to install and start the configured list of bundles.
# The order is important as bundle installation order is an input to package resolution process in OSGi.
# Since we want packages from endorsed bundles to be preferred over those exported by system bundle for 
# overlapping packages, we need to install and start endorsed bundles first. 
# Then we autostart GlassFish provisioning bundle that takes care of installing and starting rest of the bundles.
# The reason for using reference scheme is that both Felix and Equinox will not cache the bundle.
# reference scheme is only used for osgi-main.jar. For endorsed bundles,
# we can't use such a scheme as those bundles need special privileges and Java security manager
# does not understand reference: scheme which is part of code source URL of any bundle installed using
# reference protocol.
# The reason for using installRootURI is to make sure any char like white space is properly encoded.
glassfish.auto.start=${com.sun.aas.installRootURI}modules/endorsed/jaxb-api-osgi.jar \
                     ${com.sun.aas.installRootURI}modules/endorsed/webservices-api-osgi.jar \
                     ${com.sun.aas.installRootURI}modules/endorsed/javax.annotation.jar \
                     reference:${com.sun.aas.installRootURI}modules/osgi-main.jar

# Following three properties are used by GlassFish provisioning bundle (osgi-main.jar)
#org.jvnet.hk2.osgimain.bundlesDir=${com.sun.aas.installRoot}/modules/

# Even if we install the endorsed bundles using autostart, we include them here as well,
# so that any changes them to them is reflected without the need to clean the OSGi cache.
#org.jvnet.hk2.osgimain.excludedSubDirs=autostart/
#org.jvnet.hk2.osgimain.autostartBundles=kernel.jar

# The Felix launcher registers a shutdown hook to cleanly stop the framework
# by default, uncomment the following line to disable it.
# Since, GlassFish uses its own shutdown hook to stop the framework, we don't need this.
#felix.shutdown.hook=false

# log level 1: error, 2: warning, 3: info, 4: debug
felix.log.level=3
org.osgi.framework.startlevel.beginning=1
# Set bundle start level to be same as that of framework, 
# otherwise HK2 installed bundles won't be activated.
# See issue #5934
# felix.startlevel.bundle=1
#felix.service.urlhandlers=false

#
# Java SE 6 platform packages. Taken from: http://java.sun.com/javase/6/docs/api/
# Don't add/remove any new package unless you find bugs.
# Since we don't know the actual package versions,
# we export most of them with default version.
jre-1.6=, \
 javax.accessibility, \
 javax.activation, \
 javax.activity, \
 javax.annotation.processing, \
 javax.crypto, \
 javax.crypto.interfaces, \
 javax.crypto.spec, \
 javax.imageio, \
 javax.imageio.event, \
 javax.imageio.metadata, \
 javax.imageio.plugins.bmp, \
 javax.imageio.plugins.jpeg, \
 javax.imageio.spi, \
 javax.imageio.stream, \
 javax.lang.model, \
 javax.lang.model.element, \
 javax.lang.model.type, \
 javax.lang.model.util, \
 javax.management, \
 javax.management.loading, \
 javax.management.modelmbean, \
 javax.management.monitor, \
 javax.management.openmbean, \
 javax.management.relation, \
 javax.management.remote, \
 javax.management.remote.rmi, \
 javax.management.timer, \
 javax.naming, \
 javax.naming.directory, \
 javax.naming.event, \
 javax.naming.ldap, \
 javax.naming.spi, \
 javax.net, \
 javax.net.ssl, \
 javax.print, \
 javax.print.attribute, \
 javax.print.attribute.standard, \
 javax.print.event, \
 javax.rmi, \
 javax.rmi.CORBA, \
 javax.rmi.ssl, \
 javax.script, \
 javax.security.auth, \
 javax.security.auth.callback, \
 javax.security.auth.kerberos, \
 javax.security.auth.login, \
 javax.security.auth.spi, \
 javax.security.auth.x500, \
 javax.security.cert, \
 javax.security.sasl, \
 javax.sound.midi, \
 javax.sound.midi.spi, \
 javax.sound.sampled, \
 javax.sound.sampled.spi, \
 javax.sql, \
 javax.sql.rowset, \
 javax.sql.rowset.serial, \
 javax.sql.rowset.spi, \
 javax.swing, \
 javax.swing.border, \
 javax.swing.colorchooser, \
 javax.swing.event, \
 javax.swing.filechooser, \
 javax.swing.plaf, \
 javax.swing.plaf.basic, \
 javax.swing.plaf.metal, \
 javax.swing.plaf.multi, \
 javax.swing.plaf.synth, \
 javax.swing.table, \
 javax.swing.text, \
 javax.swing.text.html, \
 javax.swing.text.html.parser, \
 javax.swing.text.rtf, \
 javax.swing.tree, \
 javax.swing.undo, \
 javax.tools, \
 javax.transaction; javax.transaction.xa, \
 javax.xml, \
 javax.xml.crypto, \
 javax.xml.crypto.dom, \
 javax.xml.crypto.dsig, \
 javax.xml.crypto.dsig.dom, \
 javax.xml.crypto.dsig.keyinfo, \
 javax.xml.crypto.dsig.spec, \
 javax.xml.datatype, \
 javax.xml.namespace, \
 javax.xml.parsers, \
 javax.xml.soap, \
 javax.xml.stream; javax.xml.stream.events; javax.xml.stream.util, \
 javax.xml.transform, \
 javax.xml.transform.dom, \
 javax.xml.transform.sax, \
 javax.xml.transform.stax, \
 javax.xml.transform.stream, \
 javax.xml.validation, \
 javax.xml.xpath, \
 org.ietf.jgss, \
 org.omg.CORBA, \
 org.omg.CORBA.DynAnyPackage, \
 org.omg.CORBA.ORBPackage, \
 org.omg.CORBA.TypeCodePackage, \
 org.omg.CORBA.portable, \
 org.omg.CORBA_2_3, \
 org.omg.CORBA_2_3.portable, \
 org.omg.CosNaming, \
 org.omg.CosNaming.NamingContextExtPackage, \
 org.omg.CosNaming.NamingContextPackage, \
 org.omg.Dynamic, \
 org.omg.DynamicAny, \
 org.omg.DynamicAny.DynAnyFactoryPackage, \
 org.omg.DynamicAny.DynAnyPackage, \
 org.omg.IOP, \
 org.omg.IOP.CodecFactoryPackage, \
 org.omg.IOP.CodecPackage, \
 org.omg.Messaging, \
 org.omg.PortableInterceptor, \
 org.omg.PortableInterceptor.ORBInitInfoPackage, \
 org.omg.PortableServer, \
 org.omg.PortableServer.CurrentPackage, \
 org.omg.PortableServer.POAManagerPackage, \
 org.omg.PortableServer.POAPackage, \
 org.omg.PortableServer.ServantLocatorPackage, \
 org.omg.PortableServer.portable, \
 org.omg.SendingContext, \
 org.w3c.dom, \
 org.w3c.dom.bootstrap, \
 org.w3c.dom.events, \
 org.w3c.dom.ls, \
 org.xml.sax, \
 org.xml.sax.ext, \
 org.xml.sax.helpers ${endorsed-standard-packages}

endorsed-standard-packages=, \
 javax.annotation, \
 javax.xml.bind, \
 javax.xml.bind.annotation, \
 javax.xml.bind.annotation.adapters, \
 javax.xml.bind.attachment, \
 javax.xml.bind.helpers, \
 javax.xml.bind.util, \
 javax.jws, \
 javax.jws.soap, \
 javax.xml.ws, \
 javax.xml.ws.handler, \
 javax.xml.ws.handler.soap, \
 javax.xml.ws.http, \
 javax.xml.ws.soap, \
 javax.xml.ws.spi, \
 javax.xml.ws.wsaddressing

# For easier maintenance and extensibility reasons, we use framework
# extension bundles to augment JDK packages exported by system bundle.
# So, this property is set an empty value.
internal-jdk-pkgs-for-gf=

#dtrace support 
jre-1.7=${jre-1.6},com.sun.tracing

# Bundle information optimization to improve performance
felix.cache.singlebundlefile=true

# Set this to true if you want to use JPA in Java SE mode in your OSGi bundles.
# See GLASSFISH-14134 for more details.
org.glassfish.osgjpa.extension.useHybridPersistenceProviderResolver=true

# When HybridPersistenceProviderResolver is used, it can be configured to use a cache. 
# Setting the next property to false, disables caching of providers.
org.glassfish.osgjpa.extension.hybridPersistenceProviderResolver.cachingEnabled=true
